{"version":3,"sources":["containers/AppContainer/constants.js","containers/AppContainer/reducers.js","utils/IndexReducer.js","containers/AppContainer/actions.js","utils/service/profileService.js","containers/AppContainer/sagas.js","utils/IndexSagas.js","components/App/ImageCard/index.js","components/App/EachImage/index.js","components/App/index.js","containers/AppContainer/index.js","components/NoMatch/index.js","serviceWorker.js","index.js"],"names":["GET_PROFILE_DETAILS","GET_PROFILE_DETAILS_SUCCESS","LIKE_POST","COMMENT_POST","ADD_POST","DELETE_POST","initialState","fromJS","profileDetails","AppReducer","state","arguments","length","undefined","action","type","set","IndexReducer","combineReducers","loadProfileDetailsSuccess","getProfileDetails","axios","get","headers","Access-Control-Allow-Origin","crossdomain","then","response","data","catch","err","fetchProfileDetails","likePost","commentPost","addPost","deletePost","deletePostSaga","addPostSaga","likePostSaga","commentPostSaga","fetchProfileDetailsSaga","regenerator_default","a","wrap","_context","prev","next","localStorage","getItem","call","sent","map","each","Object","objectSpread","liked","comments","setItem","JSON","stringify","parse","put","t0","stop","_marked","this","param","_context2","id","likes","console","log","_marked2","_context3","payload","unshift","comment","timestamp","moment","format","_marked3","_context4","Image","image","_marked4","newDetals","_context5","forEach","value","index","push","_marked5","_context6","takeLatest","_marked6","_context7","_marked7","_context8","_marked8","_context9","_marked9","_context10","_marked10","sagas","IndexSaga","all","toConsumableArray","AppSagas","saga","IndexSagas_marked","ImageCard","dropdownOpen","toggleDropDown","_this","setState","_this$props","props","imageDetails","openImage","react_default","createElement","className","reactstrap_es","top","width","src","alt","onClick","ti","color","concat","size","isOpen","toggle","io","fromNow","Component","EachImage","changeComment","e","target","trim","addComment","_this$props2","details","closeModal","react","sm","getIn","key","onChange","App","openImageStatus","selectedId","imagePreviewUrl","fileName","closeToggle","selectImage","preventDefault","reader","FileReader","file","files","allowedImg","readAsDataURL","onloadend","result","substring","flag","startsWith","uploadImage","fileInput","loadProfileDetails","_this2","_this$state","offset","ref","md","lg","components_App_ImageCard","components_App_EachImage","AppContainer","href","src_components_App","connect","dispatch","NoMatch","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","history","createBrowserHistory","routerMiddleware","router","sagaMiddleware","createSagaMiddleware","composeSetup","compose","store","createStore","connectRouter","applyMiddleware","run","IndexSagas","ReactDOM","render","es","immutable","Switch","Route","path","component","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ad538624.chunk.js","sourcesContent":["export const GET_PROFILE_DETAILS = 'GET_PROFILE_DETAILS'\nexport const GET_PROFILE_DETAILS_SUCCESS = 'GET_PROFILE_DETAILS_SUCCESS'\nexport const LIKE_POST = 'LIKE_POST'\nexport const COMMENT_POST = 'COMMENT_POST'\nexport const ADD_POST = 'ADD_POST'\nexport const DELETE_POST = 'DELETE_POST'\n","import { fromJS } from 'immutable'\nimport { GET_PROFILE_DETAILS_SUCCESS } from './constants'\n\nconst initialState = fromJS({\n\tprofileDetails: [],\n})\n\n/* eslint-disable no-fallthrough */\nfunction AppReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase GET_PROFILE_DETAILS_SUCCESS:\n\t\t\treturn state\n\t\t\t\t.set('profileDetails', fromJS(action.profileDetails))\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n/* eslint-enable no-fallthrough */\n\nexport default AppReducer\n","import { combineReducers } from 'redux-immutable'\nimport AppReducer from '../containers/AppContainer/reducers'\n\nconst IndexReducer = combineReducers({\n\tAppReducer\n})\n\nexport default IndexReducer\n","import {\n\tGET_PROFILE_DETAILS,\n\tGET_PROFILE_DETAILS_SUCCESS,\n\tADD_POST,\n\tCOMMENT_POST,\n\tDELETE_POST,\n\tLIKE_POST\n} from './constants'\n\nexport const loadProfileDetailsSuccess = profileDetails => ({\n\ttype: GET_PROFILE_DETAILS_SUCCESS,\n\tprofileDetails\n})\n\nexport const loadProfileDetails = () => ({\n\ttype: GET_PROFILE_DETAILS\n})\n\nexport const likePost = id => ({\n\ttype: LIKE_POST,\n\tid\n})\n\nexport const commentPost = payload => ({\n\ttype: COMMENT_POST,\n\tpayload\n})\n\nexport const addPost = image => ({\n\ttype: ADD_POST,\n\timage\n})\n\nexport const deletePost = id => ({\n\ttype: DELETE_POST,\n\tid\n})\n","import axios from 'axios'\n\nexport function getProfileDetails() {\n\treturn axios.get(\n\t\t`https://cors-anywhere.herokuapp.com/http://starlord.hackerearth.com/insta`,\n\t\t{\n\t\t\theaders: { 'Access-Control-Allow-Origin': '*' },\n\t\t\tcrossdomain: true\n\t\t}\n\t)\n\t\t.then(response => response.data)\n\t\t.catch(err => {\n\t\t\tthrow err\n\t\t})\n}\n","import { takeLatest, call, put } from 'redux-saga/effects'\nimport moment from 'moment'\n\nimport { loadProfileDetailsSuccess } from './actions'\n\nimport { GET_PROFILE_DETAILS, LIKE_POST, COMMENT_POST, ADD_POST, DELETE_POST } from './constants'\n\nimport { getProfileDetails } from '../../utils/service/profileService'\n\nfunction* fetchProfileDetails() {\n\ttry {\n\t\tlet profileDetails = ''\n\t\tprofileDetails = localStorage.getItem('profileDetails')\n\t\tif (!profileDetails) {\n\t\t\tprofileDetails = yield call(getProfileDetails)\n\t\t\tprofileDetails = profileDetails.map(each => ({\n\t\t\t\t...each,\n\t\t\t\tliked: false,\n\t\t\t\tcomments: []\n\t\t\t}))\n\t\t\tlocalStorage.setItem('profileDetails', JSON.stringify(profileDetails));\n\t\t} else {\n\t\t\tprofileDetails = JSON.parse(profileDetails)\n\t\t}\n\t\tyield put(loadProfileDetailsSuccess(profileDetails))\n\t} catch (error) {\n\t\t// todo\n\t}\n}\n\nfunction* likePost(param) {\n\ttry {\n\t\tlet profileDetails = ''\n\t\tprofileDetails = JSON.parse(localStorage.getItem('profileDetails'))\n\t\tif(profileDetails[param.id].liked) {\n\t\t\tprofileDetails[param.id].liked = false\n\t\t\tprofileDetails[param.id].likes = +(profileDetails[param.id].likes) - 1\n\t\t} else {\n\t\t\tprofileDetails[param.id].liked = true\n\t\t\tprofileDetails[param.id].likes = +(profileDetails[param.id].likes) + 1\n\t\t}\n\t\tlocalStorage.setItem('profileDetails', JSON.stringify(profileDetails));\n\t\tyield put(loadProfileDetailsSuccess(profileDetails))\n\t} catch (error) {\n\t\tconsole.log(error)\n\t\t// todo\n\t}\n}\n\nfunction* commentPost(param) {\n\ttry {\n\t\tlet profileDetails = ''\n\t\tprofileDetails = JSON.parse(localStorage.getItem('profileDetails'))\n\t\tconsole.log(param)\n\t\tprofileDetails[param.payload.id].comments.unshift({\n\t\t\tdata: param.payload.comment,\n\t\t\ttimestamp: moment().format('YYYY-MM-DD HH:mm:ss')\n\t\t})\n\t\tlocalStorage.setItem('profileDetails', JSON.stringify(profileDetails));\n\t\tyield put(loadProfileDetailsSuccess(profileDetails))\n\t} catch (error) {\n\t\t// todo\n\t}\n}\n\nfunction* addPost(param) {\n\ttry {\n\t\tlet profileDetails = ''\n\t\tprofileDetails = JSON.parse(localStorage.getItem('profileDetails'))\n\t\tprofileDetails.unshift({\n\t\t\tImage: param.image,\n\t\t\ttimestamp: moment().format('YYYY-MM-DD HH:mm:ss'),\n\t\t\tlikes: 0,\n\t\t\tliked: false,\n\t\t\tcomments: []\n\t\t})\n\t\tlocalStorage.setItem('profileDetails', JSON.stringify(profileDetails));\n\t\tyield put(loadProfileDetailsSuccess(profileDetails))\n\t} catch (error) {\n\t\t// todo\n\t}\n}\n\nfunction* deletePost(param) {\n\ttry {\n\t\tlet newDetals = []\n\t\tconst profileDetails = JSON.parse(localStorage.getItem('profileDetails'))\n\t\tprofileDetails.forEach((value, index) => {\n\t\t\tif(index !== param.id) {\n\t\t\t\tnewDetals.push(value)\n\t\t\t}\n\t\t})\n\t\tlocalStorage.setItem('profileDetails', JSON.stringify(newDetals));\n\t\tyield put(loadProfileDetailsSuccess(newDetals))\n\t} catch (error) {\n\t\t// todo\n\t}\n}\n\nfunction* deletePostSaga() {\n\tyield takeLatest(DELETE_POST, deletePost)\n}\n\nfunction* addPostSaga() {\n\tyield takeLatest(ADD_POST, addPost)\n}\n\nfunction* likePostSaga() {\n\tyield takeLatest(LIKE_POST, likePost)\n}\n\nfunction* commentPostSaga() {\n\tyield takeLatest(COMMENT_POST, commentPost)\n}\n\nfunction* fetchProfileDetailsSaga() {\n\tyield takeLatest(GET_PROFILE_DETAILS, fetchProfileDetails)\n}\n\nexport default [fetchProfileDetailsSaga, likePostSaga, commentPostSaga, addPostSaga, deletePostSaga]\n","import { all } from 'redux-saga/effects'\nimport AppSagas from '../containers/AppContainer/sagas'\n\nexport default function* IndexSaga() {\n\tyield all([\n\t\t...AppSagas.map(saga => saga()),\n\t])\n}\n","import React, { Component } from 'react';\nimport moment from 'moment'\nimport { TiHeartOutline, TiHeartFullOutline } from 'react-icons/ti'\nimport { IoMdMore } from 'react-icons/io'\nimport {\n\tCard, CardImg, CardText, CardBody, Dropdown, Button,\n\tDropdownToggle, DropdownMenu, DropdownItem, CardSubtitle\n} from 'reactstrap';\n\nimport './index.css'\n\nclass ImageCard extends Component {\n\n\tstate = {\n\t\tdropdownOpen: false\n\t}\n\n\ttoggleDropDown = () => {\n\t\tconst { dropdownOpen } = this.state\n\t\tthis.setState({\n\t\t\tdropdownOpen: !dropdownOpen\n\t\t})\n\t}\n\n\trender() {\n\t\tconst { dropdownOpen } = this.state\n\t\tconst { imageDetails, openImage, likePost, id, deletePost } = this.props\n\t\treturn (\n\t\t\t<div className=\"mt-3\">\n\t\t\t\t<Card>\n\t\t\t\t\t<CardImg\n\t\t\t\t\t\ttop\n\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\tsrc={imageDetails.get('Image')}\n\t\t\t\t\t\talt=\"Card image cap\"\n\t\t\t\t\t\tclassName=\"image-size pointer\"\n\t\t\t\t\t\tonClick={() => openImage(id)}\n\t\t\t\t\t/>\n\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t<CardSubtitle>\n\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\timageDetails.get('liked') ?\n\t\t\t\t\t\t\t\t\t\t<TiHeartFullOutline color=\"red\" className=\"mr-2 pointer f-1-5\" onClick={() => likePost(id)} /> :\n\t\t\t\t\t\t\t\t\t\t<TiHeartOutline className=\"mr-2 pointer f-1-3\" onClick={() => likePost(id)} />\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{`${imageDetails.get('likes') ? imageDetails.get('likes') : 0} Likes`}\n\t\t\t\t\t\t\t\t<span className=\"pl-2\">|</span>\n\t\t\t\t\t\t\t\t<Button className=\"transparent-btn border-none clr-black\" onClick={() => openImage(id)}>\n\t\t\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t\t\t{`${imageDetails.get('comments') ? imageDetails.get('comments').size : 0}`}\n\t\t\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t\t\t<span className=\"pl-2\">Comments</span>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t<span className=\"float-right\">\n\t\t\t\t\t\t\t\t<Dropdown isOpen={dropdownOpen} toggle={this.toggleDropDown}>\n\t\t\t\t\t\t\t\t\t<DropdownToggle className=\"transparent-btn p-0\">\n\t\t\t\t\t\t\t\t\t\t<IoMdMore color=\"black\" />\n\t\t\t\t\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t\t\t\t<DropdownItem onClick={() => deletePost(id)}>\n\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</CardSubtitle>\n\t\t\t\t\t\t<CardText>\n\t\t\t\t\t\t\t<small>{moment(imageDetails.get('timestamp')).fromNow()}</small>\n\t\t\t\t\t\t</CardText>\n\t\t\t\t\t</CardBody>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ImageCard\n","import React, { Component, Fragment } from 'react';\nimport moment from 'moment'\nimport { TiHeartOutline, TiHeartFullOutline } from 'react-icons/ti'\nimport { IoIosClose } from 'react-icons/io'\nimport { Row, Col, Input, Button } from 'reactstrap';\n\nimport './index.css'\n\nclass EachImage extends Component {\n\n\tstate = {\n\t\tcomment: ''\n\t}\n\n\tchangeComment = e => {\n\t\tthis.setState({\n\t\t\tcomment: e.target.value.trim()\n\t\t})\n\t}\n\n\taddComment = () => {\n\t\tconst { commentPost, id } = this.props\n\t\tconst { comment } = this.state\n\t\tif (comment !== '')\n\t\t\tcommentPost(comment, id)\n\t\tthis.setState({\n\t\t\tcomment: ''\n\t\t})\n\t}\n\n\trender() {\n\t\tconst { details, likePost, id, closeModal } = this.props\n\t\tconst { comment } = this.state\n\t\treturn (\n\t\t\t<Row className=\"p-0\">\n\t\t\t\t{\n\t\t\t\t\tid !== '' ? (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<Col sm={7}>\n\t\t\t\t\t\t\t\t<img src={details.getIn([id, 'Image'])} alt=\"Image\" className=\"full-width container-image\" />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col sm={5} className=\"mt-3  pr-5\">\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col sm={12} className=\"border-btm pb-2 mb-2\">\n\t\t\t\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tdetails.getIn([id, 'liked']) ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TiHeartFullOutline color=\"red\" className=\"mr-2 pointer f-1-5\" onClick={() => likePost(id)} /> :\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TiHeartOutline className=\"mr-2 pointer f-1-3\" onClick={() => likePost(id)} />\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t{`${details.getIn([id, 'likes']) ? details.getIn([id, 'likes']) : 0} Likes`}\n\t\t\t\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t\t\t\t<IoIosClose onClick={closeModal} className=\"pointer float-right f-1-5\" />\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col sm={12} className=\"comment-section\">\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tdetails.getIn([id, 'comments']).map((value, index) =>\n\t\t\t\t\t\t\t\t\t\t\t\t<div key={`comment-${index}`} className=\"comment-div mb-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>{value.get('data')}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<small>{moment(value.get('timestamp')).fromNow()}</small>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col sm={12} className=\"mt-3\">\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={comment}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.changeComment}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={this.addComment} className=\"mt-2 float-right\">Comment</Button>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t) : null\n\t\t\t\t}\n\n\t\t\t</Row>\n\t\t);\n\t}\n}\n\nexport default EachImage\n","import React, { Component } from 'react';\nimport { Button, Modal, Input, ModalBody, Container, Row, Col } from 'reactstrap';\nimport { fromJS } from 'immutable';\n\nimport ImageCard from './ImageCard'\nimport EachImage from './EachImage'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nclass App extends Component {\n\n\tstate = {\n\t\topenImageStatus: false,\n\t\tselectedId: '',\n\t\timagePreviewUrl: '',\n\t\tfileName: ''\n\t}\n\n\tcloseToggle = () => {\n\t\tthis.setState({\n\t\t\topenImageStatus: false,\n\t\t\tdetails: fromJS([]),\n\t\t\tselectedId: ''\n\t\t})\n\t}\n\n\topenImage = id => {\n\t\tthis.setState({\n\t\t\topenImageStatus: true,\n\t\t\tselectedId: id\n\t\t})\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { loadProfileDetails } = this.props\n\t\tloadProfileDetails()\n\t}\n\n\tselectImage = e => {\n\t\te.preventDefault()\n\t\tconst reader = new FileReader()\n\t\tconst file = e.target.files[0]\n\t\tconst allowedImg = ['data:image/jpeg', 'data:image/png', 'data:image/jpg', 'data:image/JPG', 'data:image/JPEG']\n\t\tif (reader) {\n\t\t\treader.readAsDataURL(file)\n\t\t\treader.onloadend = () => {\n\t\t\t\tconst type = reader.result.substring(0, 15)\n\t\t\t\tlet flag = false\n\t\t\t\tallowedImg.forEach(value => {\n\t\t\t\t\tif (type.startsWith(value)) {\n\t\t\t\t\t\tflag = true\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (flag) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\timagePreviewUrl: reader.result\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\te.target.value = null\n\t\t}\n\t}\n\n\tuploadImage = () => {\n\t\tconst { addPost } = this.props\n\t\tconst { imagePreviewUrl } = this.state\n\t\tif (imagePreviewUrl !== '') {\n\t\t\taddPost(imagePreviewUrl)\n\t\t\tthis.setState({\n\t\t\t\timagePreviewUrl: ''\n\t\t\t})\n\t\t}\n\t\tthis.fileInput.value = ''\n\t}\n\n\trender() {\n\t\tconst { profileDetails, likePost, commentPost, deletePost } = this.props\n\t\tconst { openImageStatus, selectedId } = this.state\n\t\treturn (\n\t\t\t<Container className=\"mt-90\">\n\t\t\t\t<Row>\n\t\t\t\t\t<Col sm={{ size: 3, offset: 6 }}>\n\t\t\t\t\t\t<Input type=\"file\" onChange={this.selectImage} ref={ref => this.fileInput = ref} />\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col sm={3}>\n\t\t\t\t\t\t<Button onClick={this.uploadImage}>Upload Post</Button>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t{\n\t\t\t\t\t\tprofileDetails.size > 0 ? profileDetails.map((value, index) =>\n\t\t\t\t\t\t\t<Col sm={12} md={6} lg={4} key={index}>\n\t\t\t\t\t\t\t\t<ImageCard\n\t\t\t\t\t\t\t\t\timageDetails={value}\n\t\t\t\t\t\t\t\t\topenImage={this.openImage}\n\t\t\t\t\t\t\t\t\tlikePost={likePost}\n\t\t\t\t\t\t\t\t\tdeletePost={deletePost}\n\t\t\t\t\t\t\t\t\tid={index}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t) : null\n\t\t\t\t\t}\n\t\t\t\t</Row>\n\t\t\t\t<Modal isOpen={openImageStatus} toggle={this.closeToggle} size=\"lg\">\n\t\t\t\t\t<ModalBody className=\"p-0\">\n\t\t\t\t\t\t<EachImage\n\t\t\t\t\t\t\tdetails={profileDetails}\n\t\t\t\t\t\t\tcloseModal={this.closeToggle}\n\t\t\t\t\t\t\tlikePost={likePost}\n\t\t\t\t\t\t\tid={selectedId}\n\t\t\t\t\t\t\tcommentPost={commentPost}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ModalBody>\n\t\t\t\t</Modal>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport App from '../../components/App'\nimport { loadProfileDetails, likePost, commentPost, addPost, deletePost } from './actions'\n\nimport './index.css'\nclass AppContainer extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-lg bg-secondary fixed-top navbar-shrink\" id=\"mainNav\">\n          <div className=\"container\">\n            <span className=\"navbar-brand js-scroll-trigger\" href=\"#page-top\">ObserveAI Hackerearth Test</span>\n          </div>\n        </nav>\n        <App {...this.props} />\n        <div className=\"copyright py-4 text-center text-white mt-5\">\n          <div className=\"container\">\n            <small>Copyright © Ashwani 2018</small>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    profileDetails: state.getIn(['AppReducer', 'profileDetails'])\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  loadProfileDetails: () => dispatch(loadProfileDetails()),\n  likePost: id => dispatch(likePost(id)),\n  commentPost: (comment, id) => dispatch(commentPost({ comment, id })),\n  addPost: image => dispatch(addPost(image)),\n  deletePost: id => dispatch(deletePost(id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer);\n","import React, { Component } from 'react'\n\nclass NoMatch extends Component {\n\trender() {\n\t\treturn <h2>404 Page Not Found...</h2>\n\t}\n}\n\nexport default NoMatch\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport { Route, Switch } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\nimport {\n\tconnectRouter,\n\tConnectedRouter,\n\trouterMiddleware as router\n} from 'connected-react-router/immutable'\nimport { applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\n// Import the index reducer and sagas\nimport IndexReducer from './utils/IndexReducer'\nimport IndexSagas from './utils/IndexSagas'\n\n// Import all of our components\nimport App from './containers/AppContainer'\nimport NoMatch from './components/NoMatch'\n\n// Other Imports\nimport * as registerServiceWorker from './serviceWorker';\n\n// Create browser history\nconst history = createBrowserHistory()\n\n// Build the middleware for intercepting and dispatching navigation actions\nconst routerMiddleware = router(history)\n\n// Build the middleware to watch between the Reducers and the Actions\nconst sagaMiddleware = createSagaMiddleware()\n\n/*eslint-disable */\nconst composeSetup =\n\tprocess.env.NODE_ENV !== 'production' &&\n\t\ttypeof window === 'object' &&\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n\t\t? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n\t\t: compose\n/* eslint-enable */\n// Setup Store\nconst store = createStore(\n\tconnectRouter(history)(IndexReducer),\n\tcomposeSetup(\n\t\tapplyMiddleware(\n\t\t\trouterMiddleware,\n\t\t\tsagaMiddleware,\n\t\t)\n\t) // allows redux devtools to watch sagas\n)\n\n// Begin our Index Saga\nsagaMiddleware.run(IndexSagas)\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<ConnectedRouter history={history}>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" component={App} />\n\t\t\t\t<Route component={NoMatch} />\n\t\t\t</Switch>\n\t\t</ConnectedRouter>\n\t</Provider>,\n\tdocument.getElementById('root')\n)\nregisterServiceWorker.register()\n"],"sourceRoot":""}